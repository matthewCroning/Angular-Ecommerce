{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PuppeteerNode = void 0;\n\nconst Puppeteer_js_1 = require(\"../common/Puppeteer.js\");\n\nconst BrowserFetcher_js_1 = require(\"./BrowserFetcher.js\");\n\nconst Launcher_js_1 = __importDefault(require(\"./Launcher.js\"));\n\nconst revisions_js_1 = require(\"../revisions.js\");\n/**\n * Extends the main {@link Puppeteer} class with Node specific behaviour for fetching and\n * downloading browsers.\n *\n * If you're using Puppeteer in a Node environment, this is the class you'll get\n * when you run `require('puppeteer')` (or the equivalent ES `import`).\n *\n * @remarks\n *\n * The most common method to use is {@link PuppeteerNode.launch | launch}, which\n * is used to launch and connect to a new browser instance.\n *\n * See {@link Puppeteer | the main Puppeteer class} for methods common to all\n * environments, such as {@link Puppeteer.connect}.\n *\n * @example\n * The following is a typical example of using Puppeteer to drive automation:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com');\n *   // other actions...\n *   await browser.close();\n * })();\n * ```\n *\n * Once you have created a `page` you have access to a large API to interact\n * with the page, navigate, or find certain elements in that page.\n * The {@link Page | `page` documentation} lists all the available methods.\n *\n * @public\n */\n\n\nclass PuppeteerNode extends Puppeteer_js_1.Puppeteer {\n  /**\n   * @internal\n   */\n  constructor(settings) {\n    const {\n      projectRoot,\n      preferredRevision,\n      productName,\n      ...commonSettings\n    } = settings;\n    super(commonSettings);\n    this._projectRoot = projectRoot;\n    this.__productName = productName;\n    this._preferredRevision = preferredRevision;\n  }\n  /**\n   * This method attaches Puppeteer to an existing browser instance.\n   *\n   * @remarks\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns Promise which resolves to browser instance.\n   */\n\n\n  connect(options) {\n    if (options.product) this._productName = options.product;\n    return super.connect(options);\n  }\n  /**\n   * @internal\n   */\n\n\n  get _productName() {\n    return this.__productName;\n  } // don't need any TSDoc here - because the getter is internal the setter is too.\n\n\n  set _productName(name) {\n    if (this.__productName !== name) this._changedProduct = true;\n    this.__productName = name;\n  }\n  /**\n   * Launches puppeteer and launches a browser instance with given arguments\n   * and options when specified.\n   *\n   * @remarks\n   *\n   * @example\n   * You can use `ignoreDefaultArgs` to filter out `--mute-audio` from default arguments:\n   * ```js\n   * const browser = await puppeteer.launch({\n   *   ignoreDefaultArgs: ['--mute-audio']\n   * });\n   * ```\n   *\n   * **NOTE** Puppeteer can also be used to control the Chrome browser,\n   * but it works best with the version of Chromium it is bundled with.\n   * There is no guarantee it will work with any other version.\n   * Use `executablePath` option with extreme caution.\n   * If Google Chrome (rather than Chromium) is preferred, a {@link https://www.google.com/chrome/browser/canary.html | Chrome Canary} or {@link https://www.chromium.org/getting-involved/dev-channel | Dev Channel} build is suggested.\n   * In `puppeteer.launch([options])`, any mention of Chromium also applies to Chrome.\n   * See {@link https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/ | this article} for a description of the differences between Chromium and Chrome. {@link https://chromium.googlesource.com/chromium/src/+/lkgr/docs/chromium_browser_vs_google_chrome.md | This article} describes some differences for Linux users.\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns Promise which resolves to browser instance.\n   */\n\n\n  launch(options = {}) {\n    if (options.product) this._productName = options.product;\n    return this._launcher.launch(options);\n  }\n  /**\n   * @remarks\n   *\n   * **NOTE** `puppeteer.executablePath()` is affected by the `PUPPETEER_EXECUTABLE_PATH`\n   * and `PUPPETEER_CHROMIUM_REVISION` environment variables.\n   *\n   * @returns A path where Puppeteer expects to find the bundled browser.\n   * The browser binary might not be there if the download was skipped with\n   * the `PUPPETEER_SKIP_DOWNLOAD` environment variable.\n   */\n\n\n  executablePath(channel) {\n    return this._launcher.executablePath(channel);\n  }\n  /**\n   * @internal\n   */\n\n\n  get _launcher() {\n    if (!this._lazyLauncher || this._lazyLauncher.product !== this._productName || this._changedProduct) {\n      switch (this._productName) {\n        case 'firefox':\n          this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.firefox;\n          break;\n\n        case 'chrome':\n        default:\n          this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.chromium;\n      }\n\n      this._changedProduct = false;\n      this._lazyLauncher = Launcher_js_1.default(this._projectRoot, this._preferredRevision, this._isPuppeteerCore, this._productName);\n    }\n\n    return this._lazyLauncher;\n  }\n  /**\n   * The name of the browser that is under automation (`\"chrome\"` or `\"firefox\"`)\n   *\n   * @remarks\n   * The product is set by the `PUPPETEER_PRODUCT` environment variable or the `product`\n   * option in `puppeteer.launch([options])` and defaults to `chrome`.\n   * Firefox support is experimental.\n   */\n\n\n  get product() {\n    return this._launcher.product;\n  }\n  /**\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns The default flags that Chromium will be launched with.\n   */\n\n\n  defaultArgs(options = {}) {\n    return this._launcher.defaultArgs(options);\n  }\n  /**\n   * @param options - Set of configurable options to specify the settings\n   * of the BrowserFetcher.\n   * @returns A new BrowserFetcher instance.\n   */\n\n\n  createBrowserFetcher(options) {\n    return new BrowserFetcher_js_1.BrowserFetcher(this._projectRoot, options);\n  }\n\n}\n\nexports.PuppeteerNode = PuppeteerNode;","map":{"version":3,"sources":["C:/Users/Matth/workspace/node_modules/puppeteer/lib/cjs/puppeteer/node/Puppeteer.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","PuppeteerNode","Puppeteer_js_1","require","BrowserFetcher_js_1","Launcher_js_1","revisions_js_1","Puppeteer","constructor","settings","projectRoot","preferredRevision","productName","commonSettings","_projectRoot","__productName","_preferredRevision","connect","options","product","_productName","name","_changedProduct","launch","_launcher","executablePath","channel","_lazyLauncher","PUPPETEER_REVISIONS","firefox","chromium","default","_isPuppeteerCore","defaultArgs","createBrowserFetcher","BrowserFetcher"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PuppeteerNode = void 0;\nconst Puppeteer_js_1 = require(\"../common/Puppeteer.js\");\nconst BrowserFetcher_js_1 = require(\"./BrowserFetcher.js\");\nconst Launcher_js_1 = __importDefault(require(\"./Launcher.js\"));\nconst revisions_js_1 = require(\"../revisions.js\");\n/**\n * Extends the main {@link Puppeteer} class with Node specific behaviour for fetching and\n * downloading browsers.\n *\n * If you're using Puppeteer in a Node environment, this is the class you'll get\n * when you run `require('puppeteer')` (or the equivalent ES `import`).\n *\n * @remarks\n *\n * The most common method to use is {@link PuppeteerNode.launch | launch}, which\n * is used to launch and connect to a new browser instance.\n *\n * See {@link Puppeteer | the main Puppeteer class} for methods common to all\n * environments, such as {@link Puppeteer.connect}.\n *\n * @example\n * The following is a typical example of using Puppeteer to drive automation:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com');\n *   // other actions...\n *   await browser.close();\n * })();\n * ```\n *\n * Once you have created a `page` you have access to a large API to interact\n * with the page, navigate, or find certain elements in that page.\n * The {@link Page | `page` documentation} lists all the available methods.\n *\n * @public\n */\nclass PuppeteerNode extends Puppeteer_js_1.Puppeteer {\n    /**\n     * @internal\n     */\n    constructor(settings) {\n        const { projectRoot, preferredRevision, productName, ...commonSettings } = settings;\n        super(commonSettings);\n        this._projectRoot = projectRoot;\n        this.__productName = productName;\n        this._preferredRevision = preferredRevision;\n    }\n    /**\n     * This method attaches Puppeteer to an existing browser instance.\n     *\n     * @remarks\n     *\n     * @param options - Set of configurable options to set on the browser.\n     * @returns Promise which resolves to browser instance.\n     */\n    connect(options) {\n        if (options.product)\n            this._productName = options.product;\n        return super.connect(options);\n    }\n    /**\n     * @internal\n     */\n    get _productName() {\n        return this.__productName;\n    }\n    // don't need any TSDoc here - because the getter is internal the setter is too.\n    set _productName(name) {\n        if (this.__productName !== name)\n            this._changedProduct = true;\n        this.__productName = name;\n    }\n    /**\n     * Launches puppeteer and launches a browser instance with given arguments\n     * and options when specified.\n     *\n     * @remarks\n     *\n     * @example\n     * You can use `ignoreDefaultArgs` to filter out `--mute-audio` from default arguments:\n     * ```js\n     * const browser = await puppeteer.launch({\n     *   ignoreDefaultArgs: ['--mute-audio']\n     * });\n     * ```\n     *\n     * **NOTE** Puppeteer can also be used to control the Chrome browser,\n     * but it works best with the version of Chromium it is bundled with.\n     * There is no guarantee it will work with any other version.\n     * Use `executablePath` option with extreme caution.\n     * If Google Chrome (rather than Chromium) is preferred, a {@link https://www.google.com/chrome/browser/canary.html | Chrome Canary} or {@link https://www.chromium.org/getting-involved/dev-channel | Dev Channel} build is suggested.\n     * In `puppeteer.launch([options])`, any mention of Chromium also applies to Chrome.\n     * See {@link https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/ | this article} for a description of the differences between Chromium and Chrome. {@link https://chromium.googlesource.com/chromium/src/+/lkgr/docs/chromium_browser_vs_google_chrome.md | This article} describes some differences for Linux users.\n     *\n     * @param options - Set of configurable options to set on the browser.\n     * @returns Promise which resolves to browser instance.\n     */\n    launch(options = {}) {\n        if (options.product)\n            this._productName = options.product;\n        return this._launcher.launch(options);\n    }\n    /**\n     * @remarks\n     *\n     * **NOTE** `puppeteer.executablePath()` is affected by the `PUPPETEER_EXECUTABLE_PATH`\n     * and `PUPPETEER_CHROMIUM_REVISION` environment variables.\n     *\n     * @returns A path where Puppeteer expects to find the bundled browser.\n     * The browser binary might not be there if the download was skipped with\n     * the `PUPPETEER_SKIP_DOWNLOAD` environment variable.\n     */\n    executablePath(channel) {\n        return this._launcher.executablePath(channel);\n    }\n    /**\n     * @internal\n     */\n    get _launcher() {\n        if (!this._lazyLauncher ||\n            this._lazyLauncher.product !== this._productName ||\n            this._changedProduct) {\n            switch (this._productName) {\n                case 'firefox':\n                    this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.firefox;\n                    break;\n                case 'chrome':\n                default:\n                    this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.chromium;\n            }\n            this._changedProduct = false;\n            this._lazyLauncher = Launcher_js_1.default(this._projectRoot, this._preferredRevision, this._isPuppeteerCore, this._productName);\n        }\n        return this._lazyLauncher;\n    }\n    /**\n     * The name of the browser that is under automation (`\"chrome\"` or `\"firefox\"`)\n     *\n     * @remarks\n     * The product is set by the `PUPPETEER_PRODUCT` environment variable or the `product`\n     * option in `puppeteer.launch([options])` and defaults to `chrome`.\n     * Firefox support is experimental.\n     */\n    get product() {\n        return this._launcher.product;\n    }\n    /**\n     *\n     * @param options - Set of configurable options to set on the browser.\n     * @returns The default flags that Chromium will be launched with.\n     */\n    defaultArgs(options = {}) {\n        return this._launcher.defaultArgs(options);\n    }\n    /**\n     * @param options - Set of configurable options to specify the settings\n     * of the BrowserFetcher.\n     * @returns A new BrowserFetcher instance.\n     */\n    createBrowserFetcher(options) {\n        return new BrowserFetcher_js_1.BrowserFetcher(this._projectRoot, options);\n    }\n}\nexports.PuppeteerNode = PuppeteerNode;\n"]},"metadata":{},"sourceType":"script"}