{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Matth\\\\workspace\\\\angular-ecommerce\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmulationManager = void 0;\n\nclass EmulationManager {\n  constructor(client) {\n    this._emulatingMobile = false;\n    this._hasTouch = false;\n    this._client = client;\n  }\n\n  emulateViewport(viewport) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const mobile = viewport.isMobile || false;\n      const width = viewport.width;\n      const height = viewport.height;\n      const deviceScaleFactor = viewport.deviceScaleFactor || 1;\n      const screenOrientation = viewport.isLandscape ? {\n        angle: 90,\n        type: 'landscapePrimary'\n      } : {\n        angle: 0,\n        type: 'portraitPrimary'\n      };\n      const hasTouch = viewport.hasTouch || false;\n      yield Promise.all([_this._client.send('Emulation.setDeviceMetricsOverride', {\n        mobile,\n        width,\n        height,\n        deviceScaleFactor,\n        screenOrientation\n      }), _this._client.send('Emulation.setTouchEmulationEnabled', {\n        enabled: hasTouch\n      })]);\n      const reloadNeeded = _this._emulatingMobile !== mobile || _this._hasTouch !== hasTouch;\n      _this._emulatingMobile = mobile;\n      _this._hasTouch = hasTouch;\n      return reloadNeeded;\n    })();\n  }\n\n}\n\nexports.EmulationManager = EmulationManager;","map":{"version":3,"sources":["C:/Users/Matth/workspace/node_modules/puppeteer/lib/cjs/puppeteer/common/EmulationManager.js"],"names":["Object","defineProperty","exports","value","EmulationManager","constructor","client","_emulatingMobile","_hasTouch","_client","emulateViewport","viewport","mobile","isMobile","width","height","deviceScaleFactor","screenOrientation","isLandscape","angle","type","hasTouch","Promise","all","send","enabled","reloadNeeded"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,MAAMA,gBAAN,CAAuB;AACnBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,OAAL,GAAeH,MAAf;AACH;;AACKI,EAAAA,eAAe,CAACC,QAAD,EAAW;AAAA;;AAAA;AAC5B,YAAMC,MAAM,GAAGD,QAAQ,CAACE,QAAT,IAAqB,KAApC;AACA,YAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAvB;AACA,YAAMC,MAAM,GAAGJ,QAAQ,CAACI,MAAxB;AACA,YAAMC,iBAAiB,GAAGL,QAAQ,CAACK,iBAAT,IAA8B,CAAxD;AACA,YAAMC,iBAAiB,GAAGN,QAAQ,CAACO,WAAT,GACpB;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OADoB,GAEpB;AAAED,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,IAAI,EAAE;AAAlB,OAFN;AAGA,YAAMC,QAAQ,GAAGV,QAAQ,CAACU,QAAT,IAAqB,KAAtC;AACA,YAAMC,OAAO,CAACC,GAAR,CAAY,CACd,KAAI,CAACd,OAAL,CAAae,IAAb,CAAkB,oCAAlB,EAAwD;AACpDZ,QAAAA,MADoD;AAEpDE,QAAAA,KAFoD;AAGpDC,QAAAA,MAHoD;AAIpDC,QAAAA,iBAJoD;AAKpDC,QAAAA;AALoD,OAAxD,CADc,EAQd,KAAI,CAACR,OAAL,CAAae,IAAb,CAAkB,oCAAlB,EAAwD;AACpDC,QAAAA,OAAO,EAAEJ;AAD2C,OAAxD,CARc,CAAZ,CAAN;AAYA,YAAMK,YAAY,GAAG,KAAI,CAACnB,gBAAL,KAA0BK,MAA1B,IAAoC,KAAI,CAACJ,SAAL,KAAmBa,QAA5E;AACA,MAAA,KAAI,CAACd,gBAAL,GAAwBK,MAAxB;AACA,MAAA,KAAI,CAACJ,SAAL,GAAiBa,QAAjB;AACA,aAAOK,YAAP;AAxB4B;AAyB/B;;AA/BkB;;AAiCvBxB,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmulationManager = void 0;\nclass EmulationManager {\n    constructor(client) {\n        this._emulatingMobile = false;\n        this._hasTouch = false;\n        this._client = client;\n    }\n    async emulateViewport(viewport) {\n        const mobile = viewport.isMobile || false;\n        const width = viewport.width;\n        const height = viewport.height;\n        const deviceScaleFactor = viewport.deviceScaleFactor || 1;\n        const screenOrientation = viewport.isLandscape\n            ? { angle: 90, type: 'landscapePrimary' }\n            : { angle: 0, type: 'portraitPrimary' };\n        const hasTouch = viewport.hasTouch || false;\n        await Promise.all([\n            this._client.send('Emulation.setDeviceMetricsOverride', {\n                mobile,\n                width,\n                height,\n                deviceScaleFactor,\n                screenOrientation,\n            }),\n            this._client.send('Emulation.setTouchEmulationEnabled', {\n                enabled: hasTouch,\n            }),\n        ]);\n        const reloadNeeded = this._emulatingMobile !== mobile || this._hasTouch !== hasTouch;\n        this._emulatingMobile = mobile;\n        this._hasTouch = hasTouch;\n        return reloadNeeded;\n    }\n}\nexports.EmulationManager = EmulationManager;\n"]},"metadata":{},"sourceType":"script"}