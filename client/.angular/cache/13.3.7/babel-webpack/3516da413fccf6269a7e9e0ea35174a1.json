{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Matth\\\\workspace\\\\angular-ecommerce\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserContext = exports.Browser = void 0;\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst Target_js_1 = require(\"./Target.js\");\n\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\n\nconst Connection_js_1 = require(\"./Connection.js\");\n\nconst WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map([['geolocation', 'geolocation'], ['midi', 'midi'], ['notifications', 'notifications'], // TODO: push isn't a valid type?\n// ['push', 'push'],\n['camera', 'videoCapture'], ['microphone', 'audioCapture'], ['background-sync', 'backgroundSync'], ['ambient-light-sensor', 'sensors'], ['accelerometer', 'sensors'], ['gyroscope', 'sensors'], ['magnetometer', 'sensors'], ['accessibility-events', 'accessibilityEvents'], ['clipboard-read', 'clipboardReadWrite'], ['clipboard-write', 'clipboardReadWrite'], ['payment-handler', 'paymentHandler'], ['idle-detection', 'idleDetection'], // chrome-specific permissions we have.\n['midi-sysex', 'midiSysex']]);\n/**\n * A Browser is created when Puppeteer connects to a Chromium instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n *\n * An example of using a {@link Browser} to create a {@link Page}:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n *\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to Chromium\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from Chromium\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close Chromium\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\n\nclass Browser extends EventEmitter_js_1.EventEmitter {\n  /**\n   * @internal\n   */\n  constructor(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback) {\n    super();\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._process = process;\n    this._connection = connection;\n\n    this._closeCallback = closeCallback || function () {};\n\n    this._targetFilterCallback = targetFilterCallback || (() => true);\n\n    this._defaultContext = new BrowserContext(this._connection, this, null);\n    this._contexts = new Map();\n\n    for (const contextId of contextIds) this._contexts.set(contextId, new BrowserContext(this._connection, this, contextId));\n\n    this._targets = new Map();\n\n    this._connection.on(Connection_js_1.ConnectionEmittedEvents.Disconnected, () => this.emit(\"disconnected\"\n    /* Disconnected */\n    ));\n\n    this._connection.on('Target.targetCreated', this._targetCreated.bind(this));\n\n    this._connection.on('Target.targetDestroyed', this._targetDestroyed.bind(this));\n\n    this._connection.on('Target.targetInfoChanged', this._targetInfoChanged.bind(this));\n  }\n  /**\n   * @internal\n   */\n\n\n  static create(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback) {\n    return _asyncToGenerator(function* () {\n      const browser = new Browser(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback);\n      yield connection.send('Target.setDiscoverTargets', {\n        discover: true\n      });\n      return browser;\n    })();\n  }\n  /**\n   * The spawned browser process. Returns `null` if the browser instance was created with\n   * {@link Puppeteer.connect}.\n   */\n\n\n  process() {\n    return this._process;\n  }\n  /**\n   * Creates a new incognito browser context. This won't share cookies/cache with other\n   * browser contexts.\n   *\n   * @example\n   * ```js\n   * (async () => {\n   *  const browser = await puppeteer.launch();\n   *   // Create a new incognito browser context.\n   *   const context = await browser.createIncognitoBrowserContext();\n   *   // Create a new page in a pristine context.\n   *   const page = await context.newPage();\n   *   // Do stuff\n   *   await page.goto('https://example.com');\n   * })();\n   * ```\n   */\n\n\n  createIncognitoBrowserContext() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        browserContextId\n      } = yield _this._connection.send('Target.createBrowserContext');\n      const context = new BrowserContext(_this._connection, _this, browserContextId);\n\n      _this._contexts.set(browserContextId, context);\n\n      return context;\n    })();\n  }\n  /**\n   * Returns an array of all open browser contexts. In a newly created browser, this will\n   * return a single instance of {@link BrowserContext}.\n   */\n\n\n  browserContexts() {\n    return [this._defaultContext, ...Array.from(this._contexts.values())];\n  }\n  /**\n   * Returns the default browser context. The default browser context cannot be closed.\n   */\n\n\n  defaultBrowserContext() {\n    return this._defaultContext;\n  }\n  /**\n   * @internal\n   * Used by BrowserContext directly so cannot be marked private.\n   */\n\n\n  _disposeContext(contextId) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2._connection.send('Target.disposeBrowserContext', {\n        browserContextId: contextId || undefined\n      });\n\n      _this2._contexts.delete(contextId);\n    })();\n  }\n\n  _targetCreated(event) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const targetInfo = event.targetInfo;\n      const {\n        browserContextId\n      } = targetInfo;\n      const context = browserContextId && _this3._contexts.has(browserContextId) ? _this3._contexts.get(browserContextId) : _this3._defaultContext;\n\n      const shouldAttachToTarget = _this3._targetFilterCallback(targetInfo);\n\n      if (!shouldAttachToTarget) {\n        return;\n      }\n\n      const target = new Target_js_1.Target(targetInfo, context, () => _this3._connection.createSession(targetInfo), _this3._ignoreHTTPSErrors, _this3._defaultViewport);\n      assert_js_1.assert(!_this3._targets.has(event.targetInfo.targetId), 'Target should not exist before targetCreated');\n\n      _this3._targets.set(event.targetInfo.targetId, target);\n\n      if (yield target._initializedPromise) {\n        _this3.emit(\"targetcreated\"\n        /* TargetCreated */\n        , target);\n\n        context.emit(\"targetcreated\"\n        /* TargetCreated */\n        , target);\n      }\n    })();\n  }\n\n  _targetDestroyed(event) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const target = _this4._targets.get(event.targetId);\n\n      target._initializedCallback(false);\n\n      _this4._targets.delete(event.targetId);\n\n      target._closedCallback();\n\n      if (yield target._initializedPromise) {\n        _this4.emit(\"targetdestroyed\"\n        /* TargetDestroyed */\n        , target);\n\n        target.browserContext().emit(\"targetdestroyed\"\n        /* TargetDestroyed */\n        , target);\n      }\n    })();\n  }\n\n  _targetInfoChanged(event) {\n    const target = this._targets.get(event.targetInfo.targetId);\n\n    assert_js_1.assert(target, 'target should exist before targetInfoChanged');\n    const previousURL = target.url();\n    const wasInitialized = target._isInitialized;\n\n    target._targetInfoChanged(event.targetInfo);\n\n    if (wasInitialized && previousURL !== target.url()) {\n      this.emit(\"targetchanged\"\n      /* TargetChanged */\n      , target);\n      target.browserContext().emit(\"targetchanged\"\n      /* TargetChanged */\n      , target);\n    }\n  }\n  /**\n   * The browser websocket endpoint which can be used as an argument to\n   * {@link Puppeteer.connect}.\n   *\n   * @returns The Browser websocket url.\n   *\n   * @remarks\n   *\n   * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n   *\n   * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n   * Learn more about the\n   * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n   * the {@link\n   * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n   * | browser endpoint}.\n   */\n\n\n  wsEndpoint() {\n    return this._connection.url();\n  }\n  /**\n   * Promise which resolves to a new {@link Page} object. The Page is created in\n   * a default browser context.\n   */\n\n\n  newPage() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this5._defaultContext.newPage();\n    })();\n  }\n  /**\n   * @internal\n   * Used by BrowserContext directly so cannot be marked private.\n   */\n\n\n  _createPageInContext(contextId) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        targetId\n      } = yield _this6._connection.send('Target.createTarget', {\n        url: 'about:blank',\n        browserContextId: contextId || undefined\n      });\n\n      const target = _this6._targets.get(targetId);\n\n      assert_js_1.assert(yield target._initializedPromise, 'Failed to create target for page');\n      const page = yield target.page();\n      return page;\n    })();\n  }\n  /**\n   * All active targets inside the Browser. In case of multiple browser contexts, returns\n   * an array with all the targets in all browser contexts.\n   */\n\n\n  targets() {\n    return Array.from(this._targets.values()).filter(target => target._isInitialized);\n  }\n  /**\n   * The target associated with the browser.\n   */\n\n\n  target() {\n    return this.targets().find(target => target.type() === 'browser');\n  }\n  /**\n   * Searches for a target in all browser contexts.\n   *\n   * @param predicate - A function to be run for every target.\n   * @returns The first target found that matches the `predicate` function.\n   *\n   * @example\n   *\n   * An example of finding a target for a page opened via `window.open`:\n   * ```js\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browser.waitForTarget(target => target.url() === 'https://www.example.com/');\n   * ```\n   */\n\n\n  waitForTarget(predicate, options = {}) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        timeout = 30000\n      } = options;\n\n      const existingTarget = _this7.targets().find(predicate);\n\n      if (existingTarget) return existingTarget;\n      let resolve;\n      const targetPromise = new Promise(x => resolve = x);\n\n      _this7.on(\"targetcreated\"\n      /* TargetCreated */\n      , check);\n\n      _this7.on(\"targetchanged\"\n      /* TargetChanged */\n      , check);\n\n      try {\n        if (!timeout) return yield targetPromise;\n        return yield helper_js_1.helper.waitWithTimeout(targetPromise, 'target', timeout);\n      } finally {\n        _this7.removeListener(\"targetcreated\"\n        /* TargetCreated */\n        , check);\n\n        _this7.removeListener(\"targetchanged\"\n        /* TargetChanged */\n        , check);\n      }\n\n      function check(target) {\n        if (predicate(target)) resolve(target);\n      }\n    })();\n  }\n  /**\n   * An array of all open pages inside the Browser.\n   *\n   * @remarks\n   *\n   * In case of multiple browser contexts, returns an array with all the pages in all\n   * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n   * here. You can find them using {@link Target.page}.\n   */\n\n\n  pages() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      const contextPages = yield Promise.all(_this8.browserContexts().map(context => context.pages())); // Flatten array.\n\n      return contextPages.reduce((acc, x) => acc.concat(x), []);\n    })();\n  }\n  /**\n   * A string representing the browser name and version.\n   *\n   * @remarks\n   *\n   * For headless Chromium, this is similar to `HeadlessChrome/61.0.3153.0`. For\n   * non-headless, this is similar to `Chrome/61.0.3153.0`.\n   *\n   * The format of browser.version() might change with future releases of Chromium.\n   */\n\n\n  version() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      const version = yield _this9._getVersion();\n      return version.product;\n    })();\n  }\n  /**\n   * The browser's original user agent. Pages can override the browser user agent with\n   * {@link Page.setUserAgent}.\n   */\n\n\n  userAgent() {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      const version = yield _this10._getVersion();\n      return version.userAgent;\n    })();\n  }\n  /**\n   * Closes Chromium and all of its pages (if any were opened). The {@link Browser} object\n   * itself is considered to be disposed and cannot be used anymore.\n   */\n\n\n  close() {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this11._closeCallback.call(null);\n\n      _this11.disconnect();\n    })();\n  }\n  /**\n   * Disconnects Puppeteer from the browser, but leaves the Chromium process running.\n   * After calling `disconnect`, the {@link Browser} object is considered disposed and\n   * cannot be used anymore.\n   */\n\n\n  disconnect() {\n    this._connection.dispose();\n  }\n  /**\n   * Indicates that the browser is connected.\n   */\n\n\n  isConnected() {\n    return !this._connection._closed;\n  }\n\n  _getVersion() {\n    return this._connection.send('Browser.getVersion');\n  }\n\n}\n\nexports.Browser = Browser;\n/**\n * BrowserContexts provide a way to operate multiple independent browser\n * sessions. When a browser is launched, it has a single BrowserContext used by\n * default. The method {@link Browser.newPage | Browser.newPage} creates a page\n * in the default browser context.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and\n * will emit various events which are documented in the\n * {@link BrowserContextEmittedEvents} enum.\n *\n * If a page opens another page, e.g. with a `window.open` call, the popup will\n * belong to the parent page's browser context.\n *\n * Puppeteer allows creation of \"incognito\" browser contexts with\n * {@link Browser.createIncognitoBrowserContext | Browser.createIncognitoBrowserContext}\n * method. \"Incognito\" browser contexts don't write any browsing data to disk.\n *\n * @example\n * ```js\n * // Create a new incognito browser context\n * const context = await browser.createIncognitoBrowserContext();\n * // Create a new page inside context.\n * const page = await context.newPage();\n * // ... do stuff with page ...\n * await page.goto('https://example.com');\n * // Dispose context once it's no longer needed.\n * await context.close();\n * ```\n * @public\n */\n\nclass BrowserContext extends EventEmitter_js_1.EventEmitter {\n  /**\n   * @internal\n   */\n  constructor(connection, browser, contextId) {\n    super();\n    this._connection = connection;\n    this._browser = browser;\n    this._id = contextId;\n  }\n  /**\n   * An array of all active targets inside the browser context.\n   */\n\n\n  targets() {\n    return this._browser.targets().filter(target => target.browserContext() === this);\n  }\n  /**\n   * This searches for a target in this specific browser context.\n   *\n   * @example\n   * An example of finding a target for a page opened via `window.open`:\n   * ```js\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browserContext.waitForTarget(target => target.url() === 'https://www.example.com/');\n   * ```\n   *\n   * @param predicate - A function to be run for every target\n   * @param options - An object of options. Accepts a timout,\n   * which is the maximum wait time in milliseconds.\n   * Pass `0` to disable the timeout. Defaults to 30 seconds.\n   * @returns Promise which resolves to the first target found\n   * that matches the `predicate` function.\n   */\n\n\n  waitForTarget(predicate, options = {}) {\n    return this._browser.waitForTarget(target => target.browserContext() === this && predicate(target), options);\n  }\n  /**\n   * An array of all pages inside the browser context.\n   *\n   * @returns Promise which resolves to an array of all open pages.\n   * Non visible pages, such as `\"background_page\"`, will not be listed here.\n   * You can find them using {@link Target.page | the target page}.\n   */\n\n\n  pages() {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      const pages = yield Promise.all(_this12.targets().filter(target => target.type() === 'page').map(target => target.page()));\n      return pages.filter(page => !!page);\n    })();\n  }\n  /**\n   * Returns whether BrowserContext is incognito.\n   * The default browser context is the only non-incognito browser context.\n   *\n   * @remarks\n   * The default browser context cannot be closed.\n   */\n\n\n  isIncognito() {\n    return !!this._id;\n  }\n  /**\n   * @example\n   * ```js\n   * const context = browser.defaultBrowserContext();\n   * await context.overridePermissions('https://html5demos.com', ['geolocation']);\n   * ```\n   *\n   * @param origin - The origin to grant permissions to, e.g. \"https://example.com\".\n   * @param permissions - An array of permissions to grant.\n   * All permissions that are not listed here will be automatically denied.\n   */\n\n\n  overridePermissions(origin, permissions) {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      const protocolPermissions = permissions.map(permission => {\n        const protocolPermission = WEB_PERMISSION_TO_PROTOCOL_PERMISSION.get(permission);\n        if (!protocolPermission) throw new Error('Unknown permission: ' + permission);\n        return protocolPermission;\n      });\n      yield _this13._connection.send('Browser.grantPermissions', {\n        origin,\n        browserContextId: _this13._id || undefined,\n        permissions: protocolPermissions\n      });\n    })();\n  }\n  /**\n   * Clears all permission overrides for the browser context.\n   *\n   * @example\n   * ```js\n   * const context = browser.defaultBrowserContext();\n   * context.overridePermissions('https://example.com', ['clipboard-read']);\n   * // do stuff ..\n   * context.clearPermissionOverrides();\n   * ```\n   */\n\n\n  clearPermissionOverrides() {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this14._connection.send('Browser.resetPermissions', {\n        browserContextId: _this14._id || undefined\n      });\n    })();\n  }\n  /**\n   * Creates a new page in the browser context.\n   */\n\n\n  newPage() {\n    return this._browser._createPageInContext(this._id);\n  }\n  /**\n   * The browser this browser context belongs to.\n   */\n\n\n  browser() {\n    return this._browser;\n  }\n  /**\n   * Closes the browser context. All the targets that belong to the browser context\n   * will be closed.\n   *\n   * @remarks\n   * Only incognito browser contexts can be closed.\n   */\n\n\n  close() {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      assert_js_1.assert(_this15._id, 'Non-incognito profiles cannot be closed!');\n      yield _this15._browser._disposeContext(_this15._id);\n    })();\n  }\n\n}\n\nexports.BrowserContext = BrowserContext;","map":{"version":3,"sources":["C:/Users/Matth/workspace/node_modules/puppeteer/lib/cjs/puppeteer/common/Browser.js"],"names":["Object","defineProperty","exports","value","BrowserContext","Browser","assert_js_1","require","helper_js_1","Target_js_1","EventEmitter_js_1","Connection_js_1","WEB_PERMISSION_TO_PROTOCOL_PERMISSION","Map","EventEmitter","constructor","connection","contextIds","ignoreHTTPSErrors","defaultViewport","process","closeCallback","targetFilterCallback","_ignoreHTTPSErrors","_defaultViewport","_process","_connection","_closeCallback","_targetFilterCallback","_defaultContext","_contexts","contextId","set","_targets","on","ConnectionEmittedEvents","Disconnected","emit","_targetCreated","bind","_targetDestroyed","_targetInfoChanged","create","browser","send","discover","createIncognitoBrowserContext","browserContextId","context","browserContexts","Array","from","values","defaultBrowserContext","_disposeContext","undefined","delete","event","targetInfo","has","get","shouldAttachToTarget","target","Target","createSession","assert","targetId","_initializedPromise","_initializedCallback","_closedCallback","browserContext","previousURL","url","wasInitialized","_isInitialized","wsEndpoint","newPage","_createPageInContext","page","targets","filter","find","type","waitForTarget","predicate","options","timeout","existingTarget","resolve","targetPromise","Promise","x","check","helper","waitWithTimeout","removeListener","pages","contextPages","all","map","reduce","acc","concat","version","_getVersion","product","userAgent","close","call","disconnect","dispose","isConnected","_closed","_browser","_id","isIncognito","overridePermissions","origin","permissions","protocolPermissions","permission","protocolPermission","Error","clearPermissionOverrides"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserContext = exports.Browser = void 0;\nconst assert_js_1 = require(\"./assert.js\");\nconst helper_js_1 = require(\"./helper.js\");\nconst Target_js_1 = require(\"./Target.js\");\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map([\n    ['geolocation', 'geolocation'],\n    ['midi', 'midi'],\n    ['notifications', 'notifications'],\n    // TODO: push isn't a valid type?\n    // ['push', 'push'],\n    ['camera', 'videoCapture'],\n    ['microphone', 'audioCapture'],\n    ['background-sync', 'backgroundSync'],\n    ['ambient-light-sensor', 'sensors'],\n    ['accelerometer', 'sensors'],\n    ['gyroscope', 'sensors'],\n    ['magnetometer', 'sensors'],\n    ['accessibility-events', 'accessibilityEvents'],\n    ['clipboard-read', 'clipboardReadWrite'],\n    ['clipboard-write', 'clipboardReadWrite'],\n    ['payment-handler', 'paymentHandler'],\n    ['idle-detection', 'idleDetection'],\n    // chrome-specific permissions we have.\n    ['midi-sysex', 'midiSysex'],\n]);\n/**\n * A Browser is created when Puppeteer connects to a Chromium instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n *\n * An example of using a {@link Browser} to create a {@link Page}:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n *\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to Chromium\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from Chromium\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close Chromium\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\nclass Browser extends EventEmitter_js_1.EventEmitter {\n    /**\n     * @internal\n     */\n    constructor(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback) {\n        super();\n        this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n        this._defaultViewport = defaultViewport;\n        this._process = process;\n        this._connection = connection;\n        this._closeCallback = closeCallback || function () { };\n        this._targetFilterCallback = targetFilterCallback || (() => true);\n        this._defaultContext = new BrowserContext(this._connection, this, null);\n        this._contexts = new Map();\n        for (const contextId of contextIds)\n            this._contexts.set(contextId, new BrowserContext(this._connection, this, contextId));\n        this._targets = new Map();\n        this._connection.on(Connection_js_1.ConnectionEmittedEvents.Disconnected, () => this.emit(\"disconnected\" /* Disconnected */));\n        this._connection.on('Target.targetCreated', this._targetCreated.bind(this));\n        this._connection.on('Target.targetDestroyed', this._targetDestroyed.bind(this));\n        this._connection.on('Target.targetInfoChanged', this._targetInfoChanged.bind(this));\n    }\n    /**\n     * @internal\n     */\n    static async create(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback) {\n        const browser = new Browser(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback);\n        await connection.send('Target.setDiscoverTargets', { discover: true });\n        return browser;\n    }\n    /**\n     * The spawned browser process. Returns `null` if the browser instance was created with\n     * {@link Puppeteer.connect}.\n     */\n    process() {\n        return this._process;\n    }\n    /**\n     * Creates a new incognito browser context. This won't share cookies/cache with other\n     * browser contexts.\n     *\n     * @example\n     * ```js\n     * (async () => {\n     *  const browser = await puppeteer.launch();\n     *   // Create a new incognito browser context.\n     *   const context = await browser.createIncognitoBrowserContext();\n     *   // Create a new page in a pristine context.\n     *   const page = await context.newPage();\n     *   // Do stuff\n     *   await page.goto('https://example.com');\n     * })();\n     * ```\n     */\n    async createIncognitoBrowserContext() {\n        const { browserContextId } = await this._connection.send('Target.createBrowserContext');\n        const context = new BrowserContext(this._connection, this, browserContextId);\n        this._contexts.set(browserContextId, context);\n        return context;\n    }\n    /**\n     * Returns an array of all open browser contexts. In a newly created browser, this will\n     * return a single instance of {@link BrowserContext}.\n     */\n    browserContexts() {\n        return [this._defaultContext, ...Array.from(this._contexts.values())];\n    }\n    /**\n     * Returns the default browser context. The default browser context cannot be closed.\n     */\n    defaultBrowserContext() {\n        return this._defaultContext;\n    }\n    /**\n     * @internal\n     * Used by BrowserContext directly so cannot be marked private.\n     */\n    async _disposeContext(contextId) {\n        await this._connection.send('Target.disposeBrowserContext', {\n            browserContextId: contextId || undefined,\n        });\n        this._contexts.delete(contextId);\n    }\n    async _targetCreated(event) {\n        const targetInfo = event.targetInfo;\n        const { browserContextId } = targetInfo;\n        const context = browserContextId && this._contexts.has(browserContextId)\n            ? this._contexts.get(browserContextId)\n            : this._defaultContext;\n        const shouldAttachToTarget = this._targetFilterCallback(targetInfo);\n        if (!shouldAttachToTarget) {\n            return;\n        }\n        const target = new Target_js_1.Target(targetInfo, context, () => this._connection.createSession(targetInfo), this._ignoreHTTPSErrors, this._defaultViewport);\n        assert_js_1.assert(!this._targets.has(event.targetInfo.targetId), 'Target should not exist before targetCreated');\n        this._targets.set(event.targetInfo.targetId, target);\n        if (await target._initializedPromise) {\n            this.emit(\"targetcreated\" /* TargetCreated */, target);\n            context.emit(\"targetcreated\" /* TargetCreated */, target);\n        }\n    }\n    async _targetDestroyed(event) {\n        const target = this._targets.get(event.targetId);\n        target._initializedCallback(false);\n        this._targets.delete(event.targetId);\n        target._closedCallback();\n        if (await target._initializedPromise) {\n            this.emit(\"targetdestroyed\" /* TargetDestroyed */, target);\n            target\n                .browserContext()\n                .emit(\"targetdestroyed\" /* TargetDestroyed */, target);\n        }\n    }\n    _targetInfoChanged(event) {\n        const target = this._targets.get(event.targetInfo.targetId);\n        assert_js_1.assert(target, 'target should exist before targetInfoChanged');\n        const previousURL = target.url();\n        const wasInitialized = target._isInitialized;\n        target._targetInfoChanged(event.targetInfo);\n        if (wasInitialized && previousURL !== target.url()) {\n            this.emit(\"targetchanged\" /* TargetChanged */, target);\n            target\n                .browserContext()\n                .emit(\"targetchanged\" /* TargetChanged */, target);\n        }\n    }\n    /**\n     * The browser websocket endpoint which can be used as an argument to\n     * {@link Puppeteer.connect}.\n     *\n     * @returns The Browser websocket url.\n     *\n     * @remarks\n     *\n     * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n     *\n     * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n     * Learn more about the\n     * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n     * the {@link\n     * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n     * | browser endpoint}.\n     */\n    wsEndpoint() {\n        return this._connection.url();\n    }\n    /**\n     * Promise which resolves to a new {@link Page} object. The Page is created in\n     * a default browser context.\n     */\n    async newPage() {\n        return this._defaultContext.newPage();\n    }\n    /**\n     * @internal\n     * Used by BrowserContext directly so cannot be marked private.\n     */\n    async _createPageInContext(contextId) {\n        const { targetId } = await this._connection.send('Target.createTarget', {\n            url: 'about:blank',\n            browserContextId: contextId || undefined,\n        });\n        const target = this._targets.get(targetId);\n        assert_js_1.assert(await target._initializedPromise, 'Failed to create target for page');\n        const page = await target.page();\n        return page;\n    }\n    /**\n     * All active targets inside the Browser. In case of multiple browser contexts, returns\n     * an array with all the targets in all browser contexts.\n     */\n    targets() {\n        return Array.from(this._targets.values()).filter((target) => target._isInitialized);\n    }\n    /**\n     * The target associated with the browser.\n     */\n    target() {\n        return this.targets().find((target) => target.type() === 'browser');\n    }\n    /**\n     * Searches for a target in all browser contexts.\n     *\n     * @param predicate - A function to be run for every target.\n     * @returns The first target found that matches the `predicate` function.\n     *\n     * @example\n     *\n     * An example of finding a target for a page opened via `window.open`:\n     * ```js\n     * await page.evaluate(() => window.open('https://www.example.com/'));\n     * const newWindowTarget = await browser.waitForTarget(target => target.url() === 'https://www.example.com/');\n     * ```\n     */\n    async waitForTarget(predicate, options = {}) {\n        const { timeout = 30000 } = options;\n        const existingTarget = this.targets().find(predicate);\n        if (existingTarget)\n            return existingTarget;\n        let resolve;\n        const targetPromise = new Promise((x) => (resolve = x));\n        this.on(\"targetcreated\" /* TargetCreated */, check);\n        this.on(\"targetchanged\" /* TargetChanged */, check);\n        try {\n            if (!timeout)\n                return await targetPromise;\n            return await helper_js_1.helper.waitWithTimeout(targetPromise, 'target', timeout);\n        }\n        finally {\n            this.removeListener(\"targetcreated\" /* TargetCreated */, check);\n            this.removeListener(\"targetchanged\" /* TargetChanged */, check);\n        }\n        function check(target) {\n            if (predicate(target))\n                resolve(target);\n        }\n    }\n    /**\n     * An array of all open pages inside the Browser.\n     *\n     * @remarks\n     *\n     * In case of multiple browser contexts, returns an array with all the pages in all\n     * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n     * here. You can find them using {@link Target.page}.\n     */\n    async pages() {\n        const contextPages = await Promise.all(this.browserContexts().map((context) => context.pages()));\n        // Flatten array.\n        return contextPages.reduce((acc, x) => acc.concat(x), []);\n    }\n    /**\n     * A string representing the browser name and version.\n     *\n     * @remarks\n     *\n     * For headless Chromium, this is similar to `HeadlessChrome/61.0.3153.0`. For\n     * non-headless, this is similar to `Chrome/61.0.3153.0`.\n     *\n     * The format of browser.version() might change with future releases of Chromium.\n     */\n    async version() {\n        const version = await this._getVersion();\n        return version.product;\n    }\n    /**\n     * The browser's original user agent. Pages can override the browser user agent with\n     * {@link Page.setUserAgent}.\n     */\n    async userAgent() {\n        const version = await this._getVersion();\n        return version.userAgent;\n    }\n    /**\n     * Closes Chromium and all of its pages (if any were opened). The {@link Browser} object\n     * itself is considered to be disposed and cannot be used anymore.\n     */\n    async close() {\n        await this._closeCallback.call(null);\n        this.disconnect();\n    }\n    /**\n     * Disconnects Puppeteer from the browser, but leaves the Chromium process running.\n     * After calling `disconnect`, the {@link Browser} object is considered disposed and\n     * cannot be used anymore.\n     */\n    disconnect() {\n        this._connection.dispose();\n    }\n    /**\n     * Indicates that the browser is connected.\n     */\n    isConnected() {\n        return !this._connection._closed;\n    }\n    _getVersion() {\n        return this._connection.send('Browser.getVersion');\n    }\n}\nexports.Browser = Browser;\n/**\n * BrowserContexts provide a way to operate multiple independent browser\n * sessions. When a browser is launched, it has a single BrowserContext used by\n * default. The method {@link Browser.newPage | Browser.newPage} creates a page\n * in the default browser context.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and\n * will emit various events which are documented in the\n * {@link BrowserContextEmittedEvents} enum.\n *\n * If a page opens another page, e.g. with a `window.open` call, the popup will\n * belong to the parent page's browser context.\n *\n * Puppeteer allows creation of \"incognito\" browser contexts with\n * {@link Browser.createIncognitoBrowserContext | Browser.createIncognitoBrowserContext}\n * method. \"Incognito\" browser contexts don't write any browsing data to disk.\n *\n * @example\n * ```js\n * // Create a new incognito browser context\n * const context = await browser.createIncognitoBrowserContext();\n * // Create a new page inside context.\n * const page = await context.newPage();\n * // ... do stuff with page ...\n * await page.goto('https://example.com');\n * // Dispose context once it's no longer needed.\n * await context.close();\n * ```\n * @public\n */\nclass BrowserContext extends EventEmitter_js_1.EventEmitter {\n    /**\n     * @internal\n     */\n    constructor(connection, browser, contextId) {\n        super();\n        this._connection = connection;\n        this._browser = browser;\n        this._id = contextId;\n    }\n    /**\n     * An array of all active targets inside the browser context.\n     */\n    targets() {\n        return this._browser\n            .targets()\n            .filter((target) => target.browserContext() === this);\n    }\n    /**\n     * This searches for a target in this specific browser context.\n     *\n     * @example\n     * An example of finding a target for a page opened via `window.open`:\n     * ```js\n     * await page.evaluate(() => window.open('https://www.example.com/'));\n     * const newWindowTarget = await browserContext.waitForTarget(target => target.url() === 'https://www.example.com/');\n     * ```\n     *\n     * @param predicate - A function to be run for every target\n     * @param options - An object of options. Accepts a timout,\n     * which is the maximum wait time in milliseconds.\n     * Pass `0` to disable the timeout. Defaults to 30 seconds.\n     * @returns Promise which resolves to the first target found\n     * that matches the `predicate` function.\n     */\n    waitForTarget(predicate, options = {}) {\n        return this._browser.waitForTarget((target) => target.browserContext() === this && predicate(target), options);\n    }\n    /**\n     * An array of all pages inside the browser context.\n     *\n     * @returns Promise which resolves to an array of all open pages.\n     * Non visible pages, such as `\"background_page\"`, will not be listed here.\n     * You can find them using {@link Target.page | the target page}.\n     */\n    async pages() {\n        const pages = await Promise.all(this.targets()\n            .filter((target) => target.type() === 'page')\n            .map((target) => target.page()));\n        return pages.filter((page) => !!page);\n    }\n    /**\n     * Returns whether BrowserContext is incognito.\n     * The default browser context is the only non-incognito browser context.\n     *\n     * @remarks\n     * The default browser context cannot be closed.\n     */\n    isIncognito() {\n        return !!this._id;\n    }\n    /**\n     * @example\n     * ```js\n     * const context = browser.defaultBrowserContext();\n     * await context.overridePermissions('https://html5demos.com', ['geolocation']);\n     * ```\n     *\n     * @param origin - The origin to grant permissions to, e.g. \"https://example.com\".\n     * @param permissions - An array of permissions to grant.\n     * All permissions that are not listed here will be automatically denied.\n     */\n    async overridePermissions(origin, permissions) {\n        const protocolPermissions = permissions.map((permission) => {\n            const protocolPermission = WEB_PERMISSION_TO_PROTOCOL_PERMISSION.get(permission);\n            if (!protocolPermission)\n                throw new Error('Unknown permission: ' + permission);\n            return protocolPermission;\n        });\n        await this._connection.send('Browser.grantPermissions', {\n            origin,\n            browserContextId: this._id || undefined,\n            permissions: protocolPermissions,\n        });\n    }\n    /**\n     * Clears all permission overrides for the browser context.\n     *\n     * @example\n     * ```js\n     * const context = browser.defaultBrowserContext();\n     * context.overridePermissions('https://example.com', ['clipboard-read']);\n     * // do stuff ..\n     * context.clearPermissionOverrides();\n     * ```\n     */\n    async clearPermissionOverrides() {\n        await this._connection.send('Browser.resetPermissions', {\n            browserContextId: this._id || undefined,\n        });\n    }\n    /**\n     * Creates a new page in the browser context.\n     */\n    newPage() {\n        return this._browser._createPageInContext(this._id);\n    }\n    /**\n     * The browser this browser context belongs to.\n     */\n    browser() {\n        return this._browser;\n    }\n    /**\n     * Closes the browser context. All the targets that belong to the browser context\n     * will be closed.\n     *\n     * @remarks\n     * Only incognito browser contexts can be closed.\n     */\n    async close() {\n        assert_js_1.assert(this._id, 'Non-incognito profiles cannot be closed!');\n        await this._browser._disposeContext(this._id);\n    }\n}\nexports.BrowserContext = BrowserContext;\n"]},"metadata":{},"sourceType":"script"}