{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Matth\\\\workspace\\\\angular-ecommerce\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserFetcher = void 0;\n\nconst os = __importStar(require(\"os\"));\n\nconst fs = __importStar(require(\"fs\"));\n\nconst path = __importStar(require(\"path\"));\n\nconst util = __importStar(require(\"util\"));\n\nconst childProcess = __importStar(require(\"child_process\"));\n\nconst https = __importStar(require(\"https\"));\n\nconst http = __importStar(require(\"http\"));\n\nconst extract_zip_1 = __importDefault(require(\"extract-zip\"));\n\nconst Debug_js_1 = require(\"../common/Debug.js\");\n\nconst util_1 = require(\"util\");\n\nconst rimraf_1 = __importDefault(require(\"rimraf\"));\n\nconst URL = __importStar(require(\"url\"));\n\nconst https_proxy_agent_1 = __importDefault(require(\"https-proxy-agent\"));\n\nconst proxy_from_env_1 = require(\"proxy-from-env\");\n\nconst assert_js_1 = require(\"../common/assert.js\");\n\nconst debugFetcher = Debug_js_1.debug(`puppeteer:fetcher`);\nconst downloadURLs = {\n  chrome: {\n    linux: '%s/chromium-browser-snapshots/Linux_x64/%d/%s.zip',\n    mac: '%s/chromium-browser-snapshots/Mac/%d/%s.zip',\n    win32: '%s/chromium-browser-snapshots/Win/%d/%s.zip',\n    win64: '%s/chromium-browser-snapshots/Win_x64/%d/%s.zip'\n  },\n  firefox: {\n    linux: '%s/firefox-%s.en-US.%s-x86_64.tar.bz2',\n    mac: '%s/firefox-%s.en-US.%s.dmg',\n    win32: '%s/firefox-%s.en-US.%s.zip',\n    win64: '%s/firefox-%s.en-US.%s.zip'\n  }\n};\nconst browserConfig = {\n  chrome: {\n    host: 'https://storage.googleapis.com',\n    destination: '.local-chromium'\n  },\n  firefox: {\n    host: 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central',\n    destination: '.local-firefox'\n  }\n};\n\nfunction archiveName(product, platform, revision) {\n  if (product === 'chrome') {\n    if (platform === 'linux') return 'chrome-linux';\n    if (platform === 'mac') return 'chrome-mac';\n\n    if (platform === 'win32' || platform === 'win64') {\n      // Windows archive name changed at r591479.\n      return parseInt(revision, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n    }\n  } else if (product === 'firefox') {\n    return platform;\n  }\n}\n/**\n * @internal\n */\n\n\nfunction downloadURL(product, platform, host, revision) {\n  const url = util.format(downloadURLs[product][platform], host, revision, archiveName(product, platform, revision));\n  return url;\n}\n/**\n * @internal\n */\n\n\nfunction handleArm64() {\n  fs.stat('/usr/bin/chromium-browser', function (err, stats) {\n    if (stats === undefined) {\n      fs.stat('/usr/bin/chromium', function (err, stats) {\n        if (stats === undefined) {\n          console.error(`The chromium binary is not available for arm64.`);\n          console.error(`If you are on Ubuntu, you can install with: `);\n          console.error(`\\n sudo apt install chromium\\n`);\n          console.error(`\\n sudo apt install chromium-browser\\n`);\n          throw new Error();\n        }\n      });\n    }\n  });\n}\n\nconst readdirAsync = util_1.promisify(fs.readdir.bind(fs));\nconst mkdirAsync = util_1.promisify(fs.mkdir.bind(fs));\nconst unlinkAsync = util_1.promisify(fs.unlink.bind(fs));\nconst chmodAsync = util_1.promisify(fs.chmod.bind(fs));\n\nfunction existsAsync(filePath) {\n  return new Promise(resolve => {\n    fs.access(filePath, err => resolve(!err));\n  });\n}\n/**\n * BrowserFetcher can download and manage different versions of Chromium and Firefox.\n *\n * @remarks\n * BrowserFetcher operates on revision strings that specify a precise version of Chromium, e.g. `\"533271\"`. Revision strings can be obtained from {@link http://omahaproxy.appspot.com/ | omahaproxy.appspot.com}.\n * In the Firefox case, BrowserFetcher downloads Firefox Nightly and\n * operates on version numbers such as `\"75\"`.\n *\n * @example\n * An example of using BrowserFetcher to download a specific version of Chromium\n * and running Puppeteer against it:\n *\n * ```js\n * const browserFetcher = puppeteer.createBrowserFetcher();\n * const revisionInfo = await browserFetcher.download('533271');\n * const browser = await puppeteer.launch({executablePath: revisionInfo.executablePath})\n * ```\n *\n * **NOTE** BrowserFetcher is not designed to work concurrently with other\n * instances of BrowserFetcher that share the same downloads directory.\n *\n * @public\n */\n\n\nclass BrowserFetcher {\n  /**\n   * @internal\n   */\n  constructor(projectRoot, options = {}) {\n    this._product = (options.product || 'chrome').toLowerCase();\n    assert_js_1.assert(this._product === 'chrome' || this._product === 'firefox', `Unknown product: \"${options.product}\"`);\n    this._downloadsFolder = options.path || path.join(projectRoot, browserConfig[this._product].destination);\n    this._downloadHost = options.host || browserConfig[this._product].host;\n    this.setPlatform(options.platform);\n    assert_js_1.assert(downloadURLs[this._product][this._platform], 'Unsupported platform: ' + this._platform);\n  }\n\n  setPlatform(platformFromOptions) {\n    if (platformFromOptions) {\n      this._platform = platformFromOptions;\n      return;\n    }\n\n    const platform = os.platform();\n    if (platform === 'darwin') this._platform = 'mac';else if (platform === 'linux') this._platform = 'linux';else if (platform === 'win32') this._platform = os.arch() === 'x64' ? 'win64' : 'win32';else assert_js_1.assert(this._platform, 'Unsupported platform: ' + os.platform());\n  }\n  /**\n   * @returns Returns the current `Platform`, which is one of `mac`, `linux`,\n   * `win32` or `win64`.\n   */\n\n\n  platform() {\n    return this._platform;\n  }\n  /**\n   * @returns Returns the current `Product`, which is one of `chrome` or\n   * `firefox`.\n   */\n\n\n  product() {\n    return this._product;\n  }\n  /**\n   * @returns The download host being used.\n   */\n\n\n  host() {\n    return this._downloadHost;\n  }\n  /**\n   * Initiates a HEAD request to check if the revision is available.\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - The revision to check availability for.\n   * @returns A promise that resolves to `true` if the revision could be downloaded\n   * from the host.\n   */\n\n\n  canDownload(revision) {\n    const url = downloadURL(this._product, this._platform, this._downloadHost, revision);\n    return new Promise(resolve => {\n      const request = httpRequest(url, 'HEAD', response => {\n        resolve(response.statusCode === 200);\n      });\n      request.on('error', error => {\n        console.error(error);\n        resolve(false);\n      });\n    });\n  }\n  /**\n   * Initiates a GET request to download the revision from the host.\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - The revision to download.\n   * @param progressCallback - A function that will be called with two arguments:\n   * How many bytes have been downloaded and the total number of bytes of the download.\n   * @returns A promise with revision information when the revision is downloaded\n   * and extracted.\n   */\n\n\n  download(revision, progressCallback = () => {}) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const url = downloadURL(_this._product, _this._platform, _this._downloadHost, revision);\n      const fileName = url.split('/').pop();\n      const archivePath = path.join(_this._downloadsFolder, fileName);\n\n      const outputPath = _this._getFolderPath(revision);\n\n      if (yield existsAsync(outputPath)) return _this.revisionInfo(revision);\n      if (!(yield existsAsync(_this._downloadsFolder))) yield mkdirAsync(_this._downloadsFolder); // Use Intel x86 builds on Apple M1 until native macOS arm64\n      // Chromium builds are available.\n\n      if (os.platform() !== 'darwin' && os.arch() === 'arm64') {\n        handleArm64();\n        return;\n      }\n\n      try {\n        yield downloadFile(url, archivePath, progressCallback);\n        yield install(archivePath, outputPath);\n      } finally {\n        if (yield existsAsync(archivePath)) yield unlinkAsync(archivePath);\n      }\n\n      const revisionInfo = _this.revisionInfo(revision);\n\n      if (revisionInfo) yield chmodAsync(revisionInfo.executablePath, 0o755);\n      return revisionInfo;\n    })();\n  }\n  /**\n   * @remarks\n   * This method is affected by the current `product`.\n   * @returns A promise with a list of all revision strings (for the current `product`)\n   * available locally on disk.\n   */\n\n\n  localRevisions() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!(yield existsAsync(_this2._downloadsFolder))) return [];\n      const fileNames = yield readdirAsync(_this2._downloadsFolder);\n      return fileNames.map(fileName => parseFolderPath(_this2._product, fileName)).filter(entry => entry && entry.platform === _this2._platform).map(entry => entry.revision);\n    })();\n  }\n  /**\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - A revision to remove for the current `product`.\n   * @returns A promise that resolves when the revision has been removes or\n   * throws if the revision has not been downloaded.\n   */\n\n\n  remove(revision) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const folderPath = _this3._getFolderPath(revision);\n\n      assert_js_1.assert(yield existsAsync(folderPath), `Failed to remove: revision ${revision} is not downloaded`);\n      yield new Promise(fulfill => rimraf_1.default(folderPath, fulfill));\n    })();\n  }\n  /**\n   * @param revision - The revision to get info for.\n   * @returns The revision info for the given revision.\n   */\n\n\n  revisionInfo(revision) {\n    const folderPath = this._getFolderPath(revision);\n\n    let executablePath = '';\n\n    if (this._product === 'chrome') {\n      if (this._platform === 'mac') executablePath = path.join(folderPath, archiveName(this._product, this._platform, revision), 'Chromium.app', 'Contents', 'MacOS', 'Chromium');else if (this._platform === 'linux') executablePath = path.join(folderPath, archiveName(this._product, this._platform, revision), 'chrome');else if (this._platform === 'win32' || this._platform === 'win64') executablePath = path.join(folderPath, archiveName(this._product, this._platform, revision), 'chrome.exe');else throw new Error('Unsupported platform: ' + this._platform);\n    } else if (this._product === 'firefox') {\n      if (this._platform === 'mac') executablePath = path.join(folderPath, 'Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');else if (this._platform === 'linux') executablePath = path.join(folderPath, 'firefox', 'firefox');else if (this._platform === 'win32' || this._platform === 'win64') executablePath = path.join(folderPath, 'firefox', 'firefox.exe');else throw new Error('Unsupported platform: ' + this._platform);\n    } else {\n      throw new Error('Unsupported product: ' + this._product);\n    }\n\n    const url = downloadURL(this._product, this._platform, this._downloadHost, revision);\n    const local = fs.existsSync(folderPath);\n    debugFetcher({\n      revision,\n      executablePath,\n      folderPath,\n      local,\n      url,\n      product: this._product\n    });\n    return {\n      revision,\n      executablePath,\n      folderPath,\n      local,\n      url,\n      product: this._product\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  _getFolderPath(revision) {\n    return path.join(this._downloadsFolder, this._platform + '-' + revision);\n  }\n\n}\n\nexports.BrowserFetcher = BrowserFetcher;\n\nfunction parseFolderPath(product, folderPath) {\n  const name = path.basename(folderPath);\n  const splits = name.split('-');\n  if (splits.length !== 2) return null;\n  const [platform, revision] = splits;\n  if (!downloadURLs[product][platform]) return null;\n  return {\n    product,\n    platform,\n    revision\n  };\n}\n/**\n * @internal\n */\n\n\nfunction downloadFile(url, destinationPath, progressCallback) {\n  debugFetcher(`Downloading binary from ${url}`);\n  let fulfill, reject;\n  let downloadedBytes = 0;\n  let totalBytes = 0;\n  const promise = new Promise((x, y) => {\n    fulfill = x;\n    reject = y;\n  });\n  const request = httpRequest(url, 'GET', response => {\n    if (response.statusCode !== 200) {\n      const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`); // consume response data to free up memory\n\n      response.resume();\n      reject(error);\n      return;\n    }\n\n    const file = fs.createWriteStream(destinationPath);\n    file.on('finish', () => fulfill());\n    file.on('error', error => reject(error));\n    response.pipe(file);\n    totalBytes = parseInt(\n    /** @type {string} */\n    response.headers['content-length'], 10);\n    if (progressCallback) response.on('data', onData);\n  });\n  request.on('error', error => reject(error));\n  return promise;\n\n  function onData(chunk) {\n    downloadedBytes += chunk.length;\n    progressCallback(downloadedBytes, totalBytes);\n  }\n}\n\nfunction install(archivePath, folderPath) {\n  debugFetcher(`Installing ${archivePath} to ${folderPath}`);\n  if (archivePath.endsWith('.zip')) return extract_zip_1.default(archivePath, {\n    dir: folderPath\n  });else if (archivePath.endsWith('.tar.bz2')) return extractTar(archivePath, folderPath);else if (archivePath.endsWith('.dmg')) return mkdirAsync(folderPath).then(() => installDMG(archivePath, folderPath));else throw new Error(`Unsupported archive format: ${archivePath}`);\n}\n/**\n * @internal\n */\n\n\nfunction extractTar(tarPath, folderPath) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const tar = require('tar-fs'); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\n  const bzip = require('unbzip2-stream');\n\n  return new Promise((fulfill, reject) => {\n    const tarStream = tar.extract(folderPath);\n    tarStream.on('error', reject);\n    tarStream.on('finish', fulfill);\n    const readStream = fs.createReadStream(tarPath);\n    readStream.pipe(bzip()).pipe(tarStream);\n  });\n}\n/**\n * @internal\n */\n\n\nfunction installDMG(dmgPath, folderPath) {\n  let mountPath;\n\n  function mountAndCopy(fulfill, reject) {\n    const mountCommand = `hdiutil attach -nobrowse -noautoopen \"${dmgPath}\"`;\n    childProcess.exec(mountCommand, (err, stdout) => {\n      if (err) return reject(err);\n      const volumes = stdout.match(/\\/Volumes\\/(.*)/m);\n      if (!volumes) return reject(new Error(`Could not find volume path in ${stdout}`));\n      mountPath = volumes[0];\n      readdirAsync(mountPath).then(fileNames => {\n        const appName = fileNames.filter(item => typeof item === 'string' && item.endsWith('.app'))[0];\n        if (!appName) return reject(new Error(`Cannot find app in ${mountPath}`));\n        const copyPath = path.join(mountPath, appName);\n        debugFetcher(`Copying ${copyPath} to ${folderPath}`);\n        childProcess.exec(`cp -R \"${copyPath}\" \"${folderPath}\"`, err => {\n          if (err) reject(err);else fulfill();\n        });\n      }).catch(reject);\n    });\n  }\n\n  function unmount() {\n    if (!mountPath) return;\n    const unmountCommand = `hdiutil detach \"${mountPath}\" -quiet`;\n    debugFetcher(`Unmounting ${mountPath}`);\n    childProcess.exec(unmountCommand, err => {\n      if (err) console.error(`Error unmounting dmg: ${err}`);\n    });\n  }\n\n  return new Promise(mountAndCopy).catch(error => {\n    console.error(error);\n  }).finally(unmount);\n}\n\nfunction httpRequest(url, method, response) {\n  const urlParsed = URL.parse(url);\n  let options = { ...urlParsed,\n    method\n  };\n  const proxyURL = proxy_from_env_1.getProxyForUrl(url);\n\n  if (proxyURL) {\n    if (url.startsWith('http:')) {\n      const proxy = URL.parse(proxyURL);\n      options = {\n        path: options.href,\n        host: proxy.hostname,\n        port: proxy.port\n      };\n    } else {\n      const parsedProxyURL = URL.parse(proxyURL);\n      const proxyOptions = { ...parsedProxyURL,\n        secureProxy: parsedProxyURL.protocol === 'https:'\n      };\n      options.agent = https_proxy_agent_1.default(proxyOptions);\n      options.rejectUnauthorized = false;\n    }\n  }\n\n  const requestCallback = res => {\n    if (res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) httpRequest(res.headers.location, method, response);else response(res);\n  };\n\n  const request = options.protocol === 'https:' ? https.request(options, requestCallback) : http.request(options, requestCallback);\n  request.end();\n  return request;\n}","map":{"version":3,"sources":["C:/Users/Matth/workspace/node_modules/puppeteer/lib/cjs/puppeteer/node/BrowserFetcher.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","BrowserFetcher","os","require","fs","path","util","childProcess","https","http","extract_zip_1","Debug_js_1","util_1","rimraf_1","URL","https_proxy_agent_1","proxy_from_env_1","assert_js_1","debugFetcher","debug","downloadURLs","chrome","linux","mac","win32","win64","firefox","browserConfig","host","destination","archiveName","product","platform","revision","parseInt","downloadURL","url","format","handleArm64","stat","err","stats","console","error","Error","readdirAsync","promisify","readdir","bind","mkdirAsync","mkdir","unlinkAsync","unlink","chmodAsync","chmod","existsAsync","filePath","Promise","resolve","access","constructor","projectRoot","options","_product","toLowerCase","assert","_downloadsFolder","join","_downloadHost","setPlatform","_platform","platformFromOptions","arch","canDownload","request","httpRequest","response","statusCode","on","download","progressCallback","fileName","split","pop","archivePath","outputPath","_getFolderPath","revisionInfo","downloadFile","install","executablePath","localRevisions","fileNames","map","parseFolderPath","filter","entry","remove","folderPath","fulfill","default","local","existsSync","name","basename","splits","length","destinationPath","reject","downloadedBytes","totalBytes","promise","x","y","resume","file","createWriteStream","pipe","headers","onData","chunk","endsWith","dir","extractTar","then","installDMG","tarPath","tar","bzip","tarStream","extract","readStream","createReadStream","dmgPath","mountPath","mountAndCopy","mountCommand","exec","stdout","volumes","match","appName","item","copyPath","catch","unmount","unmountCommand","finally","method","urlParsed","parse","proxyURL","getProxyForUrl","startsWith","proxy","href","hostname","port","parsedProxyURL","proxyOptions","secureProxy","protocol","agent","rejectUnauthorized","requestCallback","res","location","end"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserFetcher = void 0;\nconst os = __importStar(require(\"os\"));\nconst fs = __importStar(require(\"fs\"));\nconst path = __importStar(require(\"path\"));\nconst util = __importStar(require(\"util\"));\nconst childProcess = __importStar(require(\"child_process\"));\nconst https = __importStar(require(\"https\"));\nconst http = __importStar(require(\"http\"));\nconst extract_zip_1 = __importDefault(require(\"extract-zip\"));\nconst Debug_js_1 = require(\"../common/Debug.js\");\nconst util_1 = require(\"util\");\nconst rimraf_1 = __importDefault(require(\"rimraf\"));\nconst URL = __importStar(require(\"url\"));\nconst https_proxy_agent_1 = __importDefault(require(\"https-proxy-agent\"));\nconst proxy_from_env_1 = require(\"proxy-from-env\");\nconst assert_js_1 = require(\"../common/assert.js\");\nconst debugFetcher = Debug_js_1.debug(`puppeteer:fetcher`);\nconst downloadURLs = {\n    chrome: {\n        linux: '%s/chromium-browser-snapshots/Linux_x64/%d/%s.zip',\n        mac: '%s/chromium-browser-snapshots/Mac/%d/%s.zip',\n        win32: '%s/chromium-browser-snapshots/Win/%d/%s.zip',\n        win64: '%s/chromium-browser-snapshots/Win_x64/%d/%s.zip',\n    },\n    firefox: {\n        linux: '%s/firefox-%s.en-US.%s-x86_64.tar.bz2',\n        mac: '%s/firefox-%s.en-US.%s.dmg',\n        win32: '%s/firefox-%s.en-US.%s.zip',\n        win64: '%s/firefox-%s.en-US.%s.zip',\n    },\n};\nconst browserConfig = {\n    chrome: {\n        host: 'https://storage.googleapis.com',\n        destination: '.local-chromium',\n    },\n    firefox: {\n        host: 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central',\n        destination: '.local-firefox',\n    },\n};\nfunction archiveName(product, platform, revision) {\n    if (product === 'chrome') {\n        if (platform === 'linux')\n            return 'chrome-linux';\n        if (platform === 'mac')\n            return 'chrome-mac';\n        if (platform === 'win32' || platform === 'win64') {\n            // Windows archive name changed at r591479.\n            return parseInt(revision, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n        }\n    }\n    else if (product === 'firefox') {\n        return platform;\n    }\n}\n/**\n * @internal\n */\nfunction downloadURL(product, platform, host, revision) {\n    const url = util.format(downloadURLs[product][platform], host, revision, archiveName(product, platform, revision));\n    return url;\n}\n/**\n * @internal\n */\nfunction handleArm64() {\n    fs.stat('/usr/bin/chromium-browser', function (err, stats) {\n        if (stats === undefined) {\n            fs.stat('/usr/bin/chromium', function (err, stats) {\n                if (stats === undefined) {\n                    console.error(`The chromium binary is not available for arm64.`);\n                    console.error(`If you are on Ubuntu, you can install with: `);\n                    console.error(`\\n sudo apt install chromium\\n`);\n                    console.error(`\\n sudo apt install chromium-browser\\n`);\n                    throw new Error();\n                }\n            });\n        }\n    });\n}\nconst readdirAsync = util_1.promisify(fs.readdir.bind(fs));\nconst mkdirAsync = util_1.promisify(fs.mkdir.bind(fs));\nconst unlinkAsync = util_1.promisify(fs.unlink.bind(fs));\nconst chmodAsync = util_1.promisify(fs.chmod.bind(fs));\nfunction existsAsync(filePath) {\n    return new Promise((resolve) => {\n        fs.access(filePath, (err) => resolve(!err));\n    });\n}\n/**\n * BrowserFetcher can download and manage different versions of Chromium and Firefox.\n *\n * @remarks\n * BrowserFetcher operates on revision strings that specify a precise version of Chromium, e.g. `\"533271\"`. Revision strings can be obtained from {@link http://omahaproxy.appspot.com/ | omahaproxy.appspot.com}.\n * In the Firefox case, BrowserFetcher downloads Firefox Nightly and\n * operates on version numbers such as `\"75\"`.\n *\n * @example\n * An example of using BrowserFetcher to download a specific version of Chromium\n * and running Puppeteer against it:\n *\n * ```js\n * const browserFetcher = puppeteer.createBrowserFetcher();\n * const revisionInfo = await browserFetcher.download('533271');\n * const browser = await puppeteer.launch({executablePath: revisionInfo.executablePath})\n * ```\n *\n * **NOTE** BrowserFetcher is not designed to work concurrently with other\n * instances of BrowserFetcher that share the same downloads directory.\n *\n * @public\n */\nclass BrowserFetcher {\n    /**\n     * @internal\n     */\n    constructor(projectRoot, options = {}) {\n        this._product = (options.product || 'chrome').toLowerCase();\n        assert_js_1.assert(this._product === 'chrome' || this._product === 'firefox', `Unknown product: \"${options.product}\"`);\n        this._downloadsFolder =\n            options.path ||\n                path.join(projectRoot, browserConfig[this._product].destination);\n        this._downloadHost = options.host || browserConfig[this._product].host;\n        this.setPlatform(options.platform);\n        assert_js_1.assert(downloadURLs[this._product][this._platform], 'Unsupported platform: ' + this._platform);\n    }\n    setPlatform(platformFromOptions) {\n        if (platformFromOptions) {\n            this._platform = platformFromOptions;\n            return;\n        }\n        const platform = os.platform();\n        if (platform === 'darwin')\n            this._platform = 'mac';\n        else if (platform === 'linux')\n            this._platform = 'linux';\n        else if (platform === 'win32')\n            this._platform = os.arch() === 'x64' ? 'win64' : 'win32';\n        else\n            assert_js_1.assert(this._platform, 'Unsupported platform: ' + os.platform());\n    }\n    /**\n     * @returns Returns the current `Platform`, which is one of `mac`, `linux`,\n     * `win32` or `win64`.\n     */\n    platform() {\n        return this._platform;\n    }\n    /**\n     * @returns Returns the current `Product`, which is one of `chrome` or\n     * `firefox`.\n     */\n    product() {\n        return this._product;\n    }\n    /**\n     * @returns The download host being used.\n     */\n    host() {\n        return this._downloadHost;\n    }\n    /**\n     * Initiates a HEAD request to check if the revision is available.\n     * @remarks\n     * This method is affected by the current `product`.\n     * @param revision - The revision to check availability for.\n     * @returns A promise that resolves to `true` if the revision could be downloaded\n     * from the host.\n     */\n    canDownload(revision) {\n        const url = downloadURL(this._product, this._platform, this._downloadHost, revision);\n        return new Promise((resolve) => {\n            const request = httpRequest(url, 'HEAD', (response) => {\n                resolve(response.statusCode === 200);\n            });\n            request.on('error', (error) => {\n                console.error(error);\n                resolve(false);\n            });\n        });\n    }\n    /**\n     * Initiates a GET request to download the revision from the host.\n     * @remarks\n     * This method is affected by the current `product`.\n     * @param revision - The revision to download.\n     * @param progressCallback - A function that will be called with two arguments:\n     * How many bytes have been downloaded and the total number of bytes of the download.\n     * @returns A promise with revision information when the revision is downloaded\n     * and extracted.\n     */\n    async download(revision, progressCallback = () => { }) {\n        const url = downloadURL(this._product, this._platform, this._downloadHost, revision);\n        const fileName = url.split('/').pop();\n        const archivePath = path.join(this._downloadsFolder, fileName);\n        const outputPath = this._getFolderPath(revision);\n        if (await existsAsync(outputPath))\n            return this.revisionInfo(revision);\n        if (!(await existsAsync(this._downloadsFolder)))\n            await mkdirAsync(this._downloadsFolder);\n        // Use Intel x86 builds on Apple M1 until native macOS arm64\n        // Chromium builds are available.\n        if (os.platform() !== 'darwin' && os.arch() === 'arm64') {\n            handleArm64();\n            return;\n        }\n        try {\n            await downloadFile(url, archivePath, progressCallback);\n            await install(archivePath, outputPath);\n        }\n        finally {\n            if (await existsAsync(archivePath))\n                await unlinkAsync(archivePath);\n        }\n        const revisionInfo = this.revisionInfo(revision);\n        if (revisionInfo)\n            await chmodAsync(revisionInfo.executablePath, 0o755);\n        return revisionInfo;\n    }\n    /**\n     * @remarks\n     * This method is affected by the current `product`.\n     * @returns A promise with a list of all revision strings (for the current `product`)\n     * available locally on disk.\n     */\n    async localRevisions() {\n        if (!(await existsAsync(this._downloadsFolder)))\n            return [];\n        const fileNames = await readdirAsync(this._downloadsFolder);\n        return fileNames\n            .map((fileName) => parseFolderPath(this._product, fileName))\n            .filter((entry) => entry && entry.platform === this._platform)\n            .map((entry) => entry.revision);\n    }\n    /**\n     * @remarks\n     * This method is affected by the current `product`.\n     * @param revision - A revision to remove for the current `product`.\n     * @returns A promise that resolves when the revision has been removes or\n     * throws if the revision has not been downloaded.\n     */\n    async remove(revision) {\n        const folderPath = this._getFolderPath(revision);\n        assert_js_1.assert(await existsAsync(folderPath), `Failed to remove: revision ${revision} is not downloaded`);\n        await new Promise((fulfill) => rimraf_1.default(folderPath, fulfill));\n    }\n    /**\n     * @param revision - The revision to get info for.\n     * @returns The revision info for the given revision.\n     */\n    revisionInfo(revision) {\n        const folderPath = this._getFolderPath(revision);\n        let executablePath = '';\n        if (this._product === 'chrome') {\n            if (this._platform === 'mac')\n                executablePath = path.join(folderPath, archiveName(this._product, this._platform, revision), 'Chromium.app', 'Contents', 'MacOS', 'Chromium');\n            else if (this._platform === 'linux')\n                executablePath = path.join(folderPath, archiveName(this._product, this._platform, revision), 'chrome');\n            else if (this._platform === 'win32' || this._platform === 'win64')\n                executablePath = path.join(folderPath, archiveName(this._product, this._platform, revision), 'chrome.exe');\n            else\n                throw new Error('Unsupported platform: ' + this._platform);\n        }\n        else if (this._product === 'firefox') {\n            if (this._platform === 'mac')\n                executablePath = path.join(folderPath, 'Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');\n            else if (this._platform === 'linux')\n                executablePath = path.join(folderPath, 'firefox', 'firefox');\n            else if (this._platform === 'win32' || this._platform === 'win64')\n                executablePath = path.join(folderPath, 'firefox', 'firefox.exe');\n            else\n                throw new Error('Unsupported platform: ' + this._platform);\n        }\n        else {\n            throw new Error('Unsupported product: ' + this._product);\n        }\n        const url = downloadURL(this._product, this._platform, this._downloadHost, revision);\n        const local = fs.existsSync(folderPath);\n        debugFetcher({\n            revision,\n            executablePath,\n            folderPath,\n            local,\n            url,\n            product: this._product,\n        });\n        return {\n            revision,\n            executablePath,\n            folderPath,\n            local,\n            url,\n            product: this._product,\n        };\n    }\n    /**\n     * @internal\n     */\n    _getFolderPath(revision) {\n        return path.join(this._downloadsFolder, this._platform + '-' + revision);\n    }\n}\nexports.BrowserFetcher = BrowserFetcher;\nfunction parseFolderPath(product, folderPath) {\n    const name = path.basename(folderPath);\n    const splits = name.split('-');\n    if (splits.length !== 2)\n        return null;\n    const [platform, revision] = splits;\n    if (!downloadURLs[product][platform])\n        return null;\n    return { product, platform, revision };\n}\n/**\n * @internal\n */\nfunction downloadFile(url, destinationPath, progressCallback) {\n    debugFetcher(`Downloading binary from ${url}`);\n    let fulfill, reject;\n    let downloadedBytes = 0;\n    let totalBytes = 0;\n    const promise = new Promise((x, y) => {\n        fulfill = x;\n        reject = y;\n    });\n    const request = httpRequest(url, 'GET', (response) => {\n        if (response.statusCode !== 200) {\n            const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`);\n            // consume response data to free up memory\n            response.resume();\n            reject(error);\n            return;\n        }\n        const file = fs.createWriteStream(destinationPath);\n        file.on('finish', () => fulfill());\n        file.on('error', (error) => reject(error));\n        response.pipe(file);\n        totalBytes = parseInt(\n        /** @type {string} */ response.headers['content-length'], 10);\n        if (progressCallback)\n            response.on('data', onData);\n    });\n    request.on('error', (error) => reject(error));\n    return promise;\n    function onData(chunk) {\n        downloadedBytes += chunk.length;\n        progressCallback(downloadedBytes, totalBytes);\n    }\n}\nfunction install(archivePath, folderPath) {\n    debugFetcher(`Installing ${archivePath} to ${folderPath}`);\n    if (archivePath.endsWith('.zip'))\n        return extract_zip_1.default(archivePath, { dir: folderPath });\n    else if (archivePath.endsWith('.tar.bz2'))\n        return extractTar(archivePath, folderPath);\n    else if (archivePath.endsWith('.dmg'))\n        return mkdirAsync(folderPath).then(() => installDMG(archivePath, folderPath));\n    else\n        throw new Error(`Unsupported archive format: ${archivePath}`);\n}\n/**\n * @internal\n */\nfunction extractTar(tarPath, folderPath) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const tar = require('tar-fs');\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const bzip = require('unbzip2-stream');\n    return new Promise((fulfill, reject) => {\n        const tarStream = tar.extract(folderPath);\n        tarStream.on('error', reject);\n        tarStream.on('finish', fulfill);\n        const readStream = fs.createReadStream(tarPath);\n        readStream.pipe(bzip()).pipe(tarStream);\n    });\n}\n/**\n * @internal\n */\nfunction installDMG(dmgPath, folderPath) {\n    let mountPath;\n    function mountAndCopy(fulfill, reject) {\n        const mountCommand = `hdiutil attach -nobrowse -noautoopen \"${dmgPath}\"`;\n        childProcess.exec(mountCommand, (err, stdout) => {\n            if (err)\n                return reject(err);\n            const volumes = stdout.match(/\\/Volumes\\/(.*)/m);\n            if (!volumes)\n                return reject(new Error(`Could not find volume path in ${stdout}`));\n            mountPath = volumes[0];\n            readdirAsync(mountPath)\n                .then((fileNames) => {\n                const appName = fileNames.filter((item) => typeof item === 'string' && item.endsWith('.app'))[0];\n                if (!appName)\n                    return reject(new Error(`Cannot find app in ${mountPath}`));\n                const copyPath = path.join(mountPath, appName);\n                debugFetcher(`Copying ${copyPath} to ${folderPath}`);\n                childProcess.exec(`cp -R \"${copyPath}\" \"${folderPath}\"`, (err) => {\n                    if (err)\n                        reject(err);\n                    else\n                        fulfill();\n                });\n            })\n                .catch(reject);\n        });\n    }\n    function unmount() {\n        if (!mountPath)\n            return;\n        const unmountCommand = `hdiutil detach \"${mountPath}\" -quiet`;\n        debugFetcher(`Unmounting ${mountPath}`);\n        childProcess.exec(unmountCommand, (err) => {\n            if (err)\n                console.error(`Error unmounting dmg: ${err}`);\n        });\n    }\n    return new Promise(mountAndCopy)\n        .catch((error) => {\n        console.error(error);\n    })\n        .finally(unmount);\n}\nfunction httpRequest(url, method, response) {\n    const urlParsed = URL.parse(url);\n    let options = {\n        ...urlParsed,\n        method,\n    };\n    const proxyURL = proxy_from_env_1.getProxyForUrl(url);\n    if (proxyURL) {\n        if (url.startsWith('http:')) {\n            const proxy = URL.parse(proxyURL);\n            options = {\n                path: options.href,\n                host: proxy.hostname,\n                port: proxy.port,\n            };\n        }\n        else {\n            const parsedProxyURL = URL.parse(proxyURL);\n            const proxyOptions = {\n                ...parsedProxyURL,\n                secureProxy: parsedProxyURL.protocol === 'https:',\n            };\n            options.agent = https_proxy_agent_1.default(proxyOptions);\n            options.rejectUnauthorized = false;\n        }\n    }\n    const requestCallback = (res) => {\n        if (res.statusCode >= 300 && res.statusCode < 400 && res.headers.location)\n            httpRequest(res.headers.location, method, response);\n        else\n            response(res);\n    };\n    const request = options.protocol === 'https:'\n        ? https.request(options, requestCallback)\n        : http.request(options, requestCallback);\n    request.end();\n    return request;\n}\n"]},"metadata":{},"sourceType":"script"}