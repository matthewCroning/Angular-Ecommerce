{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Matth\\\\workspace\\\\angular-ecommerce\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Target = void 0;\n\nconst Page_js_1 = require(\"./Page.js\");\n\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\n/**\n * @public\n */\n\n\nclass Target {\n  /**\n   * @internal\n   */\n  constructor(targetInfo, browserContext, sessionFactory, ignoreHTTPSErrors, defaultViewport) {\n    var _this = this;\n\n    this._targetInfo = targetInfo;\n    this._browserContext = browserContext;\n    this._targetId = targetInfo.targetId;\n    this._sessionFactory = sessionFactory;\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    /** @type {?Promise<!Puppeteer.Page>} */\n\n    this._pagePromise = null;\n    /** @type {?Promise<!WebWorker>} */\n\n    this._workerPromise = null;\n    this._initializedPromise = new Promise(fulfill => this._initializedCallback = fulfill).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (success) {\n        if (!success) return false;\n\n        const opener = _this.opener();\n\n        if (!opener || !opener._pagePromise || _this.type() !== 'page') return true;\n        const openerPage = yield opener._pagePromise;\n        if (!openerPage.listenerCount(\"popup\"\n        /* Popup */\n        )) return true;\n        const popupPage = yield _this.page();\n        openerPage.emit(\"popup\"\n        /* Popup */\n        , popupPage);\n        return true;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    this._isClosedPromise = new Promise(fulfill => this._closedCallback = fulfill);\n    this._isInitialized = this._targetInfo.type !== 'page' || this._targetInfo.url !== '';\n    if (this._isInitialized) this._initializedCallback(true);\n  }\n  /**\n   * Creates a Chrome Devtools Protocol session attached to the target.\n   */\n\n\n  createCDPSession() {\n    return this._sessionFactory();\n  }\n  /**\n   * If the target is not of type `\"page\"` or `\"background_page\"`, returns `null`.\n   */\n\n\n  page() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if ((_this2._targetInfo.type === 'page' || _this2._targetInfo.type === 'background_page' || _this2._targetInfo.type === 'webview') && !_this2._pagePromise) {\n        _this2._pagePromise = _this2._sessionFactory().then(client => Page_js_1.Page.create(client, _this2, _this2._ignoreHTTPSErrors, _this2._defaultViewport));\n      }\n\n      return _this2._pagePromise;\n    })();\n  }\n  /**\n   * If the target is not of type `\"service_worker\"` or `\"shared_worker\"`, returns `null`.\n   */\n\n\n  worker() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3._targetInfo.type !== 'service_worker' && _this3._targetInfo.type !== 'shared_worker') return null;\n\n      if (!_this3._workerPromise) {\n        // TODO(einbinder): Make workers send their console logs.\n        _this3._workerPromise = _this3._sessionFactory().then(client => new WebWorker_js_1.WebWorker(client, _this3._targetInfo.url, () => {}\n        /* consoleAPICalled */\n        , () => {}\n        /* exceptionThrown */\n        ));\n      }\n\n      return _this3._workerPromise;\n    })();\n  }\n\n  url() {\n    return this._targetInfo.url;\n  }\n  /**\n   * Identifies what kind of target this is.\n   *\n   * @remarks\n   *\n   * See {@link https://developer.chrome.com/extensions/background_pages | docs} for more info about background pages.\n   */\n\n\n  type() {\n    const type = this._targetInfo.type;\n    if (type === 'page' || type === 'background_page' || type === 'service_worker' || type === 'shared_worker' || type === 'browser' || type === 'webview') return type;\n    return 'other';\n  }\n  /**\n   * Get the browser the target belongs to.\n   */\n\n\n  browser() {\n    return this._browserContext.browser();\n  }\n  /**\n   * Get the browser context the target belongs to.\n   */\n\n\n  browserContext() {\n    return this._browserContext;\n  }\n  /**\n   * Get the target that opened this target. Top-level targets return `null`.\n   */\n\n\n  opener() {\n    const {\n      openerId\n    } = this._targetInfo;\n    if (!openerId) return null;\n    return this.browser()._targets.get(openerId);\n  }\n  /**\n   * @internal\n   */\n\n\n  _targetInfoChanged(targetInfo) {\n    this._targetInfo = targetInfo;\n\n    if (!this._isInitialized && (this._targetInfo.type !== 'page' || this._targetInfo.url !== '')) {\n      this._isInitialized = true;\n\n      this._initializedCallback(true);\n\n      return;\n    }\n  }\n\n}\n\nexports.Target = Target;","map":{"version":3,"sources":["C:/Users/Matth/workspace/node_modules/puppeteer/lib/cjs/puppeteer/common/Target.js"],"names":["Object","defineProperty","exports","value","Target","Page_js_1","require","WebWorker_js_1","constructor","targetInfo","browserContext","sessionFactory","ignoreHTTPSErrors","defaultViewport","_targetInfo","_browserContext","_targetId","targetId","_sessionFactory","_ignoreHTTPSErrors","_defaultViewport","_pagePromise","_workerPromise","_initializedPromise","Promise","fulfill","_initializedCallback","then","success","opener","type","openerPage","listenerCount","popupPage","page","emit","_isClosedPromise","_closedCallback","_isInitialized","url","createCDPSession","client","Page","create","worker","WebWorker","browser","openerId","_targets","get","_targetInfoChanged"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,gBAAD,CAA9B;AACA;AACA;AACA;;;AACA,MAAMF,MAAN,CAAa;AACT;AACJ;AACA;AACII,EAAAA,WAAW,CAACC,UAAD,EAAaC,cAAb,EAA6BC,cAA7B,EAA6CC,iBAA7C,EAAgEC,eAAhE,EAAiF;AAAA;;AACxF,SAAKC,WAAL,GAAmBL,UAAnB;AACA,SAAKM,eAAL,GAAuBL,cAAvB;AACA,SAAKM,SAAL,GAAiBP,UAAU,CAACQ,QAA5B;AACA,SAAKC,eAAL,GAAuBP,cAAvB;AACA,SAAKQ,kBAAL,GAA0BP,iBAA1B;AACA,SAAKQ,gBAAL,GAAwBP,eAAxB;AACA;;AACA,SAAKQ,YAAL,GAAoB,IAApB;AACA;;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,mBAAL,GAA2B,IAAIC,OAAJ,CAAaC,OAAD,IAAc,KAAKC,oBAAL,GAA4BD,OAAtD,EAAgEE,IAAhE;AAAA,mCAAqE,WAAOC,OAAP,EAAmB;AAC/G,YAAI,CAACA,OAAL,EACI,OAAO,KAAP;;AACJ,cAAMC,MAAM,GAAG,KAAI,CAACA,MAAL,EAAf;;AACA,YAAI,CAACA,MAAD,IAAW,CAACA,MAAM,CAACR,YAAnB,IAAmC,KAAI,CAACS,IAAL,OAAgB,MAAvD,EACI,OAAO,IAAP;AACJ,cAAMC,UAAU,SAASF,MAAM,CAACR,YAAhC;AACA,YAAI,CAACU,UAAU,CAACC,aAAX,CAAyB;AAAQ;AAAjC,SAAL,EACI,OAAO,IAAP;AACJ,cAAMC,SAAS,SAAS,KAAI,CAACC,IAAL,EAAxB;AACAH,QAAAA,UAAU,CAACI,IAAX,CAAgB;AAAQ;AAAxB,UAAqCF,SAArC;AACA,eAAO,IAAP;AACH,OAZ0B;;AAAA;AAAA;AAAA;AAAA,QAA3B;AAaA,SAAKG,gBAAL,GAAwB,IAAIZ,OAAJ,CAAaC,OAAD,IAAc,KAAKY,eAAL,GAAuBZ,OAAjD,CAAxB;AACA,SAAKa,cAAL,GACI,KAAKxB,WAAL,CAAiBgB,IAAjB,KAA0B,MAA1B,IAAoC,KAAKhB,WAAL,CAAiByB,GAAjB,KAAyB,EADjE;AAEA,QAAI,KAAKD,cAAT,EACI,KAAKZ,oBAAL,CAA0B,IAA1B;AACP;AACD;AACJ;AACA;;;AACIc,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKtB,eAAL,EAAP;AACH;AACD;AACJ;AACA;;;AACUgB,EAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,UAAI,CAAC,MAAI,CAACpB,WAAL,CAAiBgB,IAAjB,KAA0B,MAA1B,IACD,MAAI,CAAChB,WAAL,CAAiBgB,IAAjB,KAA0B,iBADzB,IAED,MAAI,CAAChB,WAAL,CAAiBgB,IAAjB,KAA0B,SAF1B,KAGA,CAAC,MAAI,CAACT,YAHV,EAGwB;AACpB,QAAA,MAAI,CAACA,YAAL,GAAoB,MAAI,CAACH,eAAL,GAAuBS,IAAvB,CAA6Bc,MAAD,IAAYpC,SAAS,CAACqC,IAAV,CAAeC,MAAf,CAAsBF,MAAtB,EAA8B,MAA9B,EAAoC,MAAI,CAACtB,kBAAzC,EAA6D,MAAI,CAACC,gBAAlE,CAAxC,CAApB;AACH;;AACD,aAAO,MAAI,CAACC,YAAZ;AAPS;AAQZ;AACD;AACJ;AACA;;;AACUuB,EAAAA,MAAM,GAAG;AAAA;;AAAA;AACX,UAAI,MAAI,CAAC9B,WAAL,CAAiBgB,IAAjB,KAA0B,gBAA1B,IACA,MAAI,CAAChB,WAAL,CAAiBgB,IAAjB,KAA0B,eAD9B,EAEI,OAAO,IAAP;;AACJ,UAAI,CAAC,MAAI,CAACR,cAAV,EAA0B;AACtB;AACA,QAAA,MAAI,CAACA,cAAL,GAAsB,MAAI,CAACJ,eAAL,GAAuBS,IAAvB,CAA6Bc,MAAD,IAAY,IAAIlC,cAAc,CAACsC,SAAnB,CAA6BJ,MAA7B,EAAqC,MAAI,CAAC3B,WAAL,CAAiByB,GAAtD,EAA2D,MAAM,CAAG;AAAC;AAArE,UAA6F,MAAM,CAAG;AAAC;AAAvG,SAAxC,CAAtB;AACH;;AACD,aAAO,MAAI,CAACjB,cAAZ;AARW;AASd;;AACDiB,EAAAA,GAAG,GAAG;AACF,WAAO,KAAKzB,WAAL,CAAiByB,GAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIT,EAAAA,IAAI,GAAG;AACH,UAAMA,IAAI,GAAG,KAAKhB,WAAL,CAAiBgB,IAA9B;AACA,QAAIA,IAAI,KAAK,MAAT,IACAA,IAAI,KAAK,iBADT,IAEAA,IAAI,KAAK,gBAFT,IAGAA,IAAI,KAAK,eAHT,IAIAA,IAAI,KAAK,SAJT,IAKAA,IAAI,KAAK,SALb,EAMI,OAAOA,IAAP;AACJ,WAAO,OAAP;AACH;AACD;AACJ;AACA;;;AACIgB,EAAAA,OAAO,GAAG;AACN,WAAO,KAAK/B,eAAL,CAAqB+B,OAArB,EAAP;AACH;AACD;AACJ;AACA;;;AACIpC,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKK,eAAZ;AACH;AACD;AACJ;AACA;;;AACIc,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEkB,MAAAA;AAAF,QAAe,KAAKjC,WAA1B;AACA,QAAI,CAACiC,QAAL,EACI,OAAO,IAAP;AACJ,WAAO,KAAKD,OAAL,GAAeE,QAAf,CAAwBC,GAAxB,CAA4BF,QAA5B,CAAP;AACH;AACD;AACJ;AACA;;;AACIG,EAAAA,kBAAkB,CAACzC,UAAD,EAAa;AAC3B,SAAKK,WAAL,GAAmBL,UAAnB;;AACA,QAAI,CAAC,KAAK6B,cAAN,KACC,KAAKxB,WAAL,CAAiBgB,IAAjB,KAA0B,MAA1B,IAAoC,KAAKhB,WAAL,CAAiByB,GAAjB,KAAyB,EAD9D,CAAJ,EACuE;AACnE,WAAKD,cAAL,GAAsB,IAAtB;;AACA,WAAKZ,oBAAL,CAA0B,IAA1B;;AACA;AACH;AACJ;;AAtHQ;;AAwHbxB,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Target = void 0;\nconst Page_js_1 = require(\"./Page.js\");\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\n/**\n * @public\n */\nclass Target {\n    /**\n     * @internal\n     */\n    constructor(targetInfo, browserContext, sessionFactory, ignoreHTTPSErrors, defaultViewport) {\n        this._targetInfo = targetInfo;\n        this._browserContext = browserContext;\n        this._targetId = targetInfo.targetId;\n        this._sessionFactory = sessionFactory;\n        this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n        this._defaultViewport = defaultViewport;\n        /** @type {?Promise<!Puppeteer.Page>} */\n        this._pagePromise = null;\n        /** @type {?Promise<!WebWorker>} */\n        this._workerPromise = null;\n        this._initializedPromise = new Promise((fulfill) => (this._initializedCallback = fulfill)).then(async (success) => {\n            if (!success)\n                return false;\n            const opener = this.opener();\n            if (!opener || !opener._pagePromise || this.type() !== 'page')\n                return true;\n            const openerPage = await opener._pagePromise;\n            if (!openerPage.listenerCount(\"popup\" /* Popup */))\n                return true;\n            const popupPage = await this.page();\n            openerPage.emit(\"popup\" /* Popup */, popupPage);\n            return true;\n        });\n        this._isClosedPromise = new Promise((fulfill) => (this._closedCallback = fulfill));\n        this._isInitialized =\n            this._targetInfo.type !== 'page' || this._targetInfo.url !== '';\n        if (this._isInitialized)\n            this._initializedCallback(true);\n    }\n    /**\n     * Creates a Chrome Devtools Protocol session attached to the target.\n     */\n    createCDPSession() {\n        return this._sessionFactory();\n    }\n    /**\n     * If the target is not of type `\"page\"` or `\"background_page\"`, returns `null`.\n     */\n    async page() {\n        if ((this._targetInfo.type === 'page' ||\n            this._targetInfo.type === 'background_page' ||\n            this._targetInfo.type === 'webview') &&\n            !this._pagePromise) {\n            this._pagePromise = this._sessionFactory().then((client) => Page_js_1.Page.create(client, this, this._ignoreHTTPSErrors, this._defaultViewport));\n        }\n        return this._pagePromise;\n    }\n    /**\n     * If the target is not of type `\"service_worker\"` or `\"shared_worker\"`, returns `null`.\n     */\n    async worker() {\n        if (this._targetInfo.type !== 'service_worker' &&\n            this._targetInfo.type !== 'shared_worker')\n            return null;\n        if (!this._workerPromise) {\n            // TODO(einbinder): Make workers send their console logs.\n            this._workerPromise = this._sessionFactory().then((client) => new WebWorker_js_1.WebWorker(client, this._targetInfo.url, () => { } /* consoleAPICalled */, () => { } /* exceptionThrown */));\n        }\n        return this._workerPromise;\n    }\n    url() {\n        return this._targetInfo.url;\n    }\n    /**\n     * Identifies what kind of target this is.\n     *\n     * @remarks\n     *\n     * See {@link https://developer.chrome.com/extensions/background_pages | docs} for more info about background pages.\n     */\n    type() {\n        const type = this._targetInfo.type;\n        if (type === 'page' ||\n            type === 'background_page' ||\n            type === 'service_worker' ||\n            type === 'shared_worker' ||\n            type === 'browser' ||\n            type === 'webview')\n            return type;\n        return 'other';\n    }\n    /**\n     * Get the browser the target belongs to.\n     */\n    browser() {\n        return this._browserContext.browser();\n    }\n    /**\n     * Get the browser context the target belongs to.\n     */\n    browserContext() {\n        return this._browserContext;\n    }\n    /**\n     * Get the target that opened this target. Top-level targets return `null`.\n     */\n    opener() {\n        const { openerId } = this._targetInfo;\n        if (!openerId)\n            return null;\n        return this.browser()._targets.get(openerId);\n    }\n    /**\n     * @internal\n     */\n    _targetInfoChanged(targetInfo) {\n        this._targetInfo = targetInfo;\n        if (!this._isInitialized &&\n            (this._targetInfo.type !== 'page' || this._targetInfo.url !== '')) {\n            this._isInitialized = true;\n            this._initializedCallback(true);\n            return;\n        }\n    }\n}\nexports.Target = Target;\n"]},"metadata":{},"sourceType":"script"}